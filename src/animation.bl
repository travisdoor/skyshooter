Animation :: struct {
    texture: *SDL_Texture,
    position: Vec2,
    frames: iVec2,
    frame_size: iVec2,
    frame_count: s32,
    current_frame: s32,
    duration: f32,
    frame_duration: f32,
    time_from_last_frame: f32,
    running: bool,
};

anim_new :: fn (game: *Game,
                texture_id: TextureId, 
                frames: *iVec2) *Animation {

    self := cast(*Animation) malloc(sizeof(Animation));

    self.texture = texture_pool_get(texture_id);

    {
        SDL_QueryTexture(self.texture, null, null, &self.frame_size.x, &self.frame_size.y);

        self.frame_size.x /= frames.x;
        self.frame_size.y /= frames.y;
    }

    self.frames = ^frames;
    self.frame_count = frames.x * frames.y;
    self.current_frame = 0;
    self.running = false;
    self.position.x = 0.f;
    self.position.y = 0.f;

    self.duration = 800.f;
    self.frame_duration = self.duration / cast(f32) self.frame_count;
    self.time_from_last_frame = 0.f;
                    
    return self;
};

anim_delete :: fn (self: *Animation) {
    free(cast(*u8) self);
};

anim_update :: fn (self: *Animation, dt: f32) {
    if !self.running { return; }
    self.time_from_last_frame += dt;

    if self.time_from_last_frame > self.frame_duration {
        self.time_from_last_frame = 0.f;
        self.current_frame += 1;

        if self.current_frame > self.frame_count {
            self.current_frame = 0;
            self.running = false;
        }
    }
};

anim_render :: fn (self: *Animation, game: *Game) {
    if !self.running { return; }
    src_rect : SDL_Rect;
    anim_set_src_frame(self, &src_rect);

    dst_rect := {:SDL_Rect:
        cast(s32) self.position.x,
        cast(s32) self.position.y,
        self.frame_size.x,
        self.frame_size.y,
    };

    SDL_RenderCopy(game.renderer, self.texture, &src_rect, &dst_rect);
};

anim_play :: fn (self: *Animation) {
    self.running = true;
};

anim_play_on_position :: fn (self: *Animation, position: *Vec2) {
    self.running = true;
    self.position = ^position;
};

anim_set_src_frame :: fn (self: *Animation, frame: *SDL_Rect) {
    ix := self.current_frame % self.frames.x;
    iy := (self.current_frame / self.frames.x) % self.frames.y;

    frame.x = ix * self.frame_size.x;
    frame.y = iy * self.frame_size.y;
    frame.w = self.frame_size.x;
    frame.h = self.frame_size.y;
};